name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with ruff
      run: |
        ruff check comit_swap_bot tests --output-format=github
        ruff format --check comit_swap_bot tests
    
    - name: Format check with black (optional - ruff also handles formatting)
      run: |
        black --check comit_swap_bot tests
      continue-on-error: true
    
    - name: Sort imports with isort
      run: |
        isort --check-only comit_swap_bot tests
    
    - name: Type check with mypy
      run: |
        mypy comit_swap_bot
    
    - name: Test with pytest
      run: |
        pytest tests -v --cov=comit_swap_bot --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/comit-swap-bot:latest
          ghcr.io/${{ github.repository_owner }}/comit-swap-bot:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max