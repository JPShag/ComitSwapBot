[lint]
ignore = ["F401", "UP007", "UP035"]
select = ["E", "W", "C"]
mccabe = 10
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "comit-swap-bot"
version = "0.1.0"
description = "COMIT-based Bitcoin-Monero atomic swap bot"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "COMIT Swap Bot", email = "noreply@example.com"}
]
keywords = ["bitcoin", "monero", "atomic", "swap", "comit", "trading"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "structlog>=23.0.0",
    "httpx>=0.25.0",
    "websockets>=11.0",
    "tweepy>=4.14.0",
    "apprise>=1.6.0",
    "aiohttp>=3.9.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "uvloop>=0.19.0; sys_platform != 'win32'",
    "python-bitcoinlib>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
]

[project.scripts]
comit-swap-bot = "comit_swap_bot.cli:main"

[project.urls]
Homepage = "https://github.com/comit-network/comit-swap-bot"
Repository = "https://github.com/comit-network/comit-swap-bot"
Issues = "https://github.com/comit-network/comit-swap-bot/issues"

[tool.setuptools.packages.find]
include = ["comit_swap_bot*"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "C90",  # mccabe complexity
]
ignore = ["E501", "B008"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
